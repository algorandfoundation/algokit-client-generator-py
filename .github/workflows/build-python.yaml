name: Build, Test and Publish Python

on: [workflow_call]

jobs:
    build-python:
        strategy:
            matrix:
                os: ["ubuntu-latest"]
                python: ["3.10", "3.11", "3.12"]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout source code
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python }}

            - name: Install pipx
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install pipx
                  python -m pipx ensurepath

            - name: Cache Poetry
              uses: actions/cache@v2
              with:
                  path: ~/.local/share/pipx/venvs/poetry
                  key: ${{ runner.os }}-poetry-${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-poetry-${{ matrix.python }}-

            - name: Install poetry
              run: pipx install poetry

            - name: Install dependencies
              run: poetry install --no-interaction

            - name: Start LocalNet
              shell: bash
              run: |
                  pipx install algokit
                  algokit -v localnet start
                  sleep 10 # workaround for slow startup

            - name: pytest + coverage
              shell: bash
              run: poetry run pytest -n auto --junitxml=pytest-junit.xml --cov-report=term-missing:skip-covered --cov=src | tee pytest-coverage.txt

            - name: Stop LocalNet
              shell: bash
              run: algokit localnet stop

            - name: pytest coverage comment - using Python 3.10 on ubuntu-latest
              if: matrix.python == '3.10' && matrix.os == 'ubuntu-latest'
              uses: MishaKav/pytest-coverage-comment@main
              continue-on-error: true # forks fail to add a comment, so continue any way
              with:
                  pytest-coverage-path: ./pytest-coverage.txt
                  junitxml-path: ./pytest-junit.xml

            - name: Build Wheel
              run: poetry build --format wheel
