{
    "hints": {
        "create(string)string": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "create(string,uint32)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "hello()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "close_out_test()string": {
            "call_config": {
                "close_out": "CALL"
            }
        },
        "delete_test()string": {
            "call_config": {
                "delete_application": "CALL"
            }
        },
        "update_test()string": {
            "call_config": {
                "update_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "greeting": {
                    "type": "bytes",
                    "key": "greeting"
                },
                "times": {
                    "type": "uint64",
                    "key": "times"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "LifeCycle",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "string",
                        "name": "greeting"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "create",
                "args": [
                    {
                        "type": "string",
                        "name": "greeting"
                    },
                    {
                        "type": "uint32",
                        "name": "times"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "hello",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "close_out_test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "delete_test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "update_test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CREATE",
        "update_application": "CALL"
    }
}